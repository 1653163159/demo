package com.example.demo.dao;

import com.example.demo.pojo.Composition;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface CompositionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table composition
     *
     * @mbg.generated Thu Mar 02 10:40:26 CST 2023
     */
    @Delete({
            "delete from composition",
            "where idcomposition = #{idcomposition,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer idcomposition);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table composition
     *
     * @mbg.generated Thu Mar 02 10:40:26 CST 2023
     */
    @Insert({
            "insert into composition (idcomposition, content)",
            "values (#{idcomposition,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR})"
    })
    int insert(Composition row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table composition
     *
     * @mbg.generated Thu Mar 02 10:40:26 CST 2023
     */
    @Select({
            "select",
            "idcomposition, content",
            "from composition",
            "where idcomposition = #{idcomposition,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column = "idcomposition", property = "idcomposition", jdbcType = JdbcType.INTEGER, id = true),
            @Result(column = "content", property = "content", jdbcType = JdbcType.VARCHAR)
    })
    Composition selectByPrimaryKey(Integer idcomposition);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table composition
     *
     * @mbg.generated Thu Mar 02 10:40:26 CST 2023
     */
    @Select({
            "select",
            "idcomposition, content",
            "from composition",
            "order by age desc,username asc"
    })
    @Results({
            @Result(column = "idcomposition", property = "idcomposition", jdbcType = JdbcType.INTEGER, id = true),
            @Result(column = "content", property = "content", jdbcType = JdbcType.VARCHAR)
    })
    List<Composition> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table composition
     *
     * @mbg.generated Thu Mar 02 10:40:26 CST 2023
     */
    @Update({
            "update composition",
            "set content = #{content,jdbcType=VARCHAR}",
            "where idcomposition = #{idcomposition,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Composition row);

    @Select({
            "select",
            "idcomposition, content",
            "from composition",
            "limit #{position,jdbcType=INTEGER},5"
    })
    @Results({
            @Result(column = "idcomposition", property = "idcomposition", jdbcType = JdbcType.INTEGER, id = true),
            @Result(column = "content", property = "content", jdbcType = JdbcType.VARCHAR)
    })
    List<Composition> selectCList(int position);
}